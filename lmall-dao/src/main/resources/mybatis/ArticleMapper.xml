<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lmall.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.lmall.domain.Article" >
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="article_sort_id" property="articleSortId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="author_name" property="authorName" jdbcType="VARCHAR" />
    <result column="hits" property="hits" jdbcType="INTEGER" />
    <result column="recommend_num" property="recommendNum" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="last_post_time" property="lastPostTime" jdbcType="TIMESTAMP" />
    <result column="post_num" property="postNum" jdbcType="INTEGER" />
    <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lmall.domain.Article" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, article_sort_id, title, author_name, hits, recommend_num, create_time, update_time, 
    last_post_time, post_num, img_url
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.lmall.domain.example.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lmall.domain.example.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.lmall.domain.example.ArticleExample" >
    delete from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lmall.domain.Article" >
    insert into article (id, article_sort_id, title, 
      author_name, hits, recommend_num, 
      create_time, update_time, last_post_time, 
      post_num, img_url, content
      )
    values (#{id,jdbcType=INTEGER}, #{articleSortId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{authorName,jdbcType=VARCHAR}, #{hits,jdbcType=INTEGER}, #{recommendNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{lastPostTime,jdbcType=TIMESTAMP}, 
      #{postNum,jdbcType=INTEGER}, #{imgUrl,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lmall.domain.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleSortId != null" >
        article_sort_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="authorName != null" >
        author_name,
      </if>
      <if test="hits != null" >
        hits,
      </if>
      <if test="recommendNum != null" >
        recommend_num,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="lastPostTime != null" >
        last_post_time,
      </if>
      <if test="postNum != null" >
        post_num,
      </if>
      <if test="imgUrl != null" >
        img_url,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleSortId != null" >
        #{articleSortId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="authorName != null" >
        #{authorName,jdbcType=VARCHAR},
      </if>
      <if test="hits != null" >
        #{hits,jdbcType=INTEGER},
      </if>
      <if test="recommendNum != null" >
        #{recommendNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastPostTime != null" >
        #{lastPostTime,jdbcType=TIMESTAMP},
      </if>
      <if test="postNum != null" >
        #{postNum,jdbcType=INTEGER},
      </if>
      <if test="imgUrl != null" >
        #{imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lmall.domain.example.ArticleExample" resultType="java.lang.Integer" >
    select count(*) from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update article
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.articleSortId != null" >
        article_sort_id = #{record.articleSortId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.authorName != null" >
        author_name = #{record.authorName,jdbcType=VARCHAR},
      </if>
      <if test="record.hits != null" >
        hits = #{record.hits,jdbcType=INTEGER},
      </if>
      <if test="record.recommendNum != null" >
        recommend_num = #{record.recommendNum,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastPostTime != null" >
        last_post_time = #{record.lastPostTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.postNum != null" >
        post_num = #{record.postNum,jdbcType=INTEGER},
      </if>
      <if test="record.imgUrl != null" >
        img_url = #{record.imgUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update article
    set id = #{record.id,jdbcType=INTEGER},
      article_sort_id = #{record.articleSortId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      author_name = #{record.authorName,jdbcType=VARCHAR},
      hits = #{record.hits,jdbcType=INTEGER},
      recommend_num = #{record.recommendNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      last_post_time = #{record.lastPostTime,jdbcType=TIMESTAMP},
      post_num = #{record.postNum,jdbcType=INTEGER},
      img_url = #{record.imgUrl,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update article
    set id = #{record.id,jdbcType=INTEGER},
      article_sort_id = #{record.articleSortId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      author_name = #{record.authorName,jdbcType=VARCHAR},
      hits = #{record.hits,jdbcType=INTEGER},
      recommend_num = #{record.recommendNum,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      last_post_time = #{record.lastPostTime,jdbcType=TIMESTAMP},
      post_num = #{record.postNum,jdbcType=INTEGER},
      img_url = #{record.imgUrl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select resultMap="ResultMapWithBLOBs" parameterType="com.lmall.domain.example.ArticleExample" id="selectByExampleWithBLOBsWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select resultMap="BaseResultMap" parameterType="com.lmall.domain.example.ArticleExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="getAllList" resultType="com.lmall.domain.ArticleDTO">
    select
    id as id,title as title,img_url as pic,content as content,hits as viewNum,post_num as reviewNum,create_time as createTime,author_name as author
    from article
  </select>
  <select id="getTopList" resultType="com.lmall.domain.ArticleDTO">
    select
    id as id,title as title,img_url as pic,content as content,hits as viewNum,post_num as reviewNum,create_time as createTime,author_name as author
    from article order by hits desc limit 10
  </select>
  <select id="searchArticle" resultType="com.lmall.domain.ArticleDTO" parameterType="java.lang.String">
    select
    id as id,title as title,img_url as pic,content as content,hits as viewNum,post_num as reviewNum,create_time as createTime,author_name as author
    from article
    where title like CONCAT('%',#{keyWord},'%')
  </select>
  <select id="getArticle" resultType="com.lmall.domain.ArticleDTO" parameterType="java.lang.String">
     select
    id as id,title as title,img_url as pic,content as content,hits as viewNum,post_num as reviewNum,create_time as createTime,author_name as author
    from article
    where title=#{title} and author_name=#{authorName}
  </select>
  <select id="getArticleByAuthor" resultType="com.lmall.domain.ArticleDTO" parameterType="java.lang.String">
     select
    id as id,title as title,img_url as pic,content as content,hits as viewNum,post_num as reviewNum,create_time as createTime,author_name as author
    from article
    where author_name=#{authorName}
  </select>
  <update id="updatePostNum" parameterType="java.lang.Integer">
    update article
    set post_num=post_num+1
    where id=#{articleId}
  </update>
</mapper>